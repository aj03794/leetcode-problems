<mxfile host="app.diagrams.net" modified="2022-09-09T10:37:34.780Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36" etag="bm0IFdNhEdYaBHSNjvc_" version="20.2.7" type="github">
  <diagram id="CwLAdlA_uoIvWeWzINfy" name="Page-1">
    <mxGraphModel dx="1829" dy="1026" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1100" pageHeight="850" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="vkXquWxrRciH1TK5NxMz-1" value="&lt;h1&gt;Tandem Bicycle&lt;/h1&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Tandem bicycle is a bicycle that operates by two people&lt;/li&gt;&lt;li&gt;Both people pedal the bicycle, but the person that pedals faster dictates the speed of the bicycle&lt;/li&gt;&lt;li&gt;So if the person A pedals at a speed of 5, and person B pedals at a speed of 4, the tandem bicycle moves at a speed of 5&lt;/li&gt;&lt;ul&gt;&lt;li&gt;tandemSpeed = max(speedA, speedB)&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Given two lists of positive integers&lt;/li&gt;&lt;ul&gt;&lt;li&gt;One that contains the speeds of the riders wearing red shirts&lt;/li&gt;&lt;li&gt;One that contains the speeds of the riders wearing blue shirst&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;Each rider is represented by a single positive integer, which is the speed that they pedal a tandem bicycle at&lt;/li&gt;&lt;li&gt;Goal is to pair every rider wearing a red shirt with a rider wearing a blue shirt to operate a tandem bicycle&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Write a function that returns the max possible total speed or the minimum possible total speed of all the tandem bicycles being ridden based on the input parater, &quot;fastest&quot;&lt;/li&gt;&lt;li&gt;If fastest=true, your function should return the max possible total speed; otherwise it should return the minimum total speed&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&quot;Total speed&quot; is defined as the sum of all the tandem bicycles being ridden&lt;/li&gt;&lt;li&gt;For example, if there are 4 riders who have speeds of 1,3,4,5 and if they&#39;re paired on tandem bicycles as follows: [1,4] and [5,3], then the total speed of these tandem bicycles is 4 + 5 = 9&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Example&lt;/div&gt;&lt;div&gt;redShirtSpeeds = [5,5,3,9,2]&lt;/div&gt;&lt;div&gt;blueShirtSpeeds = [3,6,7,2,1]&lt;/div&gt;&lt;div&gt;fastest= true&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;output = 32&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="50" y="70" width="870" height="530" as="geometry" />
        </mxCell>
        <mxCell id="vkXquWxrRciH1TK5NxMz-2" value="&lt;h1&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Solution 1&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;If fastest = true, we want to get the maximum speed possible&lt;/li&gt;&lt;li&gt;So when we&#39;re creating a pair, we want to take the slowest possible rider from 1 group and the fastest rider from the other&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;In the example above, we get the output by having [5, _] [5, _], [6, _], [7, _], [9_ ]&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;So how can we achieve this?&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;We can sort the arrays&lt;/li&gt;&lt;li&gt;When fastest = true -&amp;gt; we want to take the X largest speeds from the two arrays where X is the length of either arrays (they are the same length)&lt;/li&gt;&lt;li&gt;When fastest = false -&amp;gt; we want to pair the current largest elements from each array&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="50" y="670" width="530" height="260" as="geometry" />
        </mxCell>
        <mxCell id="vkXquWxrRciH1TK5NxMz-3" value="&lt;h1&gt;Space and Time Complexity&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Time Complexity is O(Nlog(N))&lt;/li&gt;&lt;li&gt;Space Complexity is O(1)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="50" y="1000" width="370" height="120" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
