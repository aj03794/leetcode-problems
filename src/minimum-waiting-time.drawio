<mxfile host="app.diagrams.net" modified="2022-09-10T10:58:26.707Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36" etag="9CIQQqueSNk9QqOrpYFa" version="20.2.7" type="github">
  <diagram id="czrMP_-AW4aoF4EeRSRZ" name="Page-1">
    <mxGraphModel dx="613" dy="634" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1100" pageHeight="850" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="53d5rHXZxRjKkrKji-g7-1" value="&lt;h1&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Minimum Waiting Time&lt;/span&gt;&lt;br&gt;&lt;/h1&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Given non-empty array of integers representing the amounts of time that specific queries take to execute&lt;/li&gt;&lt;li&gt;Only one query can be executed at a time, but the queries can be executed in any order&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;A query&#39;s &quot;waiting time&quot; is defined as the amount of time that it must wiat before its execution starts&lt;/li&gt;&lt;li&gt;For example, if a query is executed second, then its waiting time is the duration of the first query&lt;/li&gt;&lt;ul&gt;&lt;li&gt;If a query is executed third, then its waiting time is the sum of the durations of the first two queries&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Write a function that returns the minimum amount of total waiting time for all the queries&lt;/li&gt;&lt;li&gt;For example, if you&#39;re given the queries of durations [1,4,5], then the total waiting time if the queries were executed in in the order of [5, 1, 4] would be 0 + 5 + (5 + 1) = 11&lt;/li&gt;&lt;li&gt;&lt;b&gt;Note you&#39;re allowed to mutate the input array&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Example&lt;/div&gt;&lt;div&gt;input: queries = [3,2,1,2,6]&lt;/div&gt;&lt;div&gt;output: 17&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="30" y="60" width="570" height="440" as="geometry" />
        </mxCell>
        <mxCell id="53d5rHXZxRjKkrKji-g7-2" value="&lt;h1&gt;Solution&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;We want the longer queries at the end so that they can impact overall wait time less&lt;/li&gt;&lt;li&gt;So we sort the array to put the larger numbers at the end&lt;/li&gt;&lt;li&gt;Then we loop through&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="520" width="310" height="180" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
